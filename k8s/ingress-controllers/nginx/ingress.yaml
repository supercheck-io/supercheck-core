apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: supercheck-ingress
  namespace: supercheck
  labels:
    app.kubernetes.io/name: supercheck
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Uncomment for TLS
spec:
  ingressClassName: nginx
  # tls:  # Uncomment for TLS
  # - hosts:
  #   - supercheck.yourdomain.com
  #   secretName: supercheck-tls
  rules:
  - host: supercheck.yourdomain.com  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: supercheck-app-service
            port:
              number: 3000
---
# Separate ingress for MinIO console (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console-ingress
  namespace: supercheck
  labels:
    app: minio
    component: console
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Uncomment for TLS
spec:
  ingressClassName: nginx
  # tls:  # Uncomment for TLS
  # - hosts:
  #   - minio.yourdomain.com
  #   secretName: minio-tls
  rules:
  - host: minio.yourdomain.com  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-service
            port:
              number: 9001