# Simplified Hetzner K3s Cluster Configuration
# Updated with Hetzner-k3s best practices and recommendations
# This is a minimal configuration for testing/development

# Replace with your actual Hetzner Cloud API token
hetzner_token: YOUR_HETZNER_API_TOKEN

# Cluster name
cluster_name: supercheck-k3s-simple

# Path where kubeconfig will be generated
kubeconfig_path: "./kubeconfig"

# K3s version
k3s_version: v1.32.0+k3s1

# Networking configuration with security improvements
networking:
  ssh:
    port: 22
    use_agent: false
    public_key_path: "~/.ssh/id_ed25519.pub" # Updated to ed25519 for better security
    private_key_path: "~/.ssh/id_ed25519"
  allowed_networks:
    ssh:
      - 0.0.0.0/0
    api:
      - 10.0.0.0/16 # Restrict to private network for better security
  public_network:
    ipv4: true
    ipv6: true
  private_network:
    enabled: true # Enable private network for better security
    subnet: 10.0.0.0/16
  cni:
    enabled: true
    encryption: false # Not needed with private network
    mode: flannel # Simple and reliable for small clusters

# Cluster CIDR settings
cluster_cidr: 10.244.0.0/16
service_cidr: 10.96.0.0/12
cluster_dns: 10.96.0.10

# Simple setup with 1 master and 1 worker for testing
masters_pool:
  instance_type: cpx11 # Smaller instance for testing
  instance_count: 1
  locations:
    - nbg1 # Nuremberg

# Single worker node
worker_node_pools:
  - name: default
    instance_type: cpx11 # Smaller instance for testing
    instance_count: 1
    location: nbg1

# Protection settings
protect_against_deletion: true
create_load_balancer_for_the_kubernetes_api: true

# Additional packages to install on all nodes
additional_packages:
  - ifupdown

# Additional commands to run after k3s installation
additional_post_k3s_commands:
  - apt update
  - apt upgrade -y
  - apt autoremove -y
