# Supercheck Deployment on K3s
# This deploys only the app and worker, using external services for DB, Redis, and S3

---
# Namespace for Supercheck
apiVersion: v1
kind: Namespace
metadata:
  name: supercheck

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: supercheck-config
  namespace: supercheck
data:
  # Database configuration (external)
  DATABASE_URL: "postgresql://user:password@your-external-db-host:5432/supercheck"
  DB_HOST: "your-external-db-host"
  DB_PORT: "5432"
  DB_USER: "your-db-user"
  DB_NAME: "supercheck"

  # Redis configuration (external)
  REDIS_HOST: "your-external-redis-host"
  REDIS_PORT: "6379"
  REDIS_URL: "redis://:password@your-external-redis-host:6379"

  # App configuration
  NEXT_PUBLIC_APP_URL: "https://supercheck.yourdomain.com"
  BETTER_AUTH_URL: "https://supercheck.yourdomain.com"
  BETTER_AUTH_SECRET: "your-super-secret-auth-key-change-this-in-production"
  NODE_ENV: "production"

  # Worker configuration
  RUNNING_CAPACITY: "5"
  QUEUED_CAPACITY: "100"
  MAX_CONCURRENT_EXECUTIONS: "2"
  TEST_EXECUTION_TIMEOUT_MS: "300000"
  JOB_EXECUTION_TIMEOUT_MS: "900000"

  # AWS S3 / MinIO Configuration
  AWS_REGION: "us-east-1"
  S3_ENDPOINT: "your-external-s3-host"
  S3_JOB_BUCKET_NAME: "playwright-job-artifacts"
  S3_TEST_BUCKET_NAME: "playwright-test-artifacts"
  S3_MONITOR_BUCKET_NAME: "playwright-monitor-artifacts"
  S3_FORCE_PATH_STYLE: "true"
  S3_OPERATION_TIMEOUT: "10000"
  S3_MAX_RETRIES: "3"

  # Notification Channel Limits
  NEXT_PUBLIC_MAX_JOB_NOTIFICATION_CHANNELS: "10"
  NEXT_PUBLIC_MAX_MONITOR_NOTIFICATION_CHANNELS: "10"

  # Playwright Configuration
  PLAYWRIGHT_HEADLESS: "true"
  PLAYWRIGHT_RETRIES: "1"
  PLAYWRIGHT_TRACE: "retain-on-failure"
  PLAYWRIGHT_SCREENSHOT: "only-on-failure"
  PLAYWRIGHT_VIDEO: "retain-on-failure"

  # Browser support
  ENABLE_FIREFOX: "false"
  ENABLE_WEBKIT: "false"
  ENABLE_MOBILE: "false"

  # Monitor Results Cleanup
  MONITOR_CLEANUP_ENABLED: "true"
  MONITOR_CLEANUP_CRON: "0 2 * * *"
  MONITOR_RETENTION_DAYS: "30"
  MONITOR_CLEANUP_BATCH_SIZE: "1000"
  MONITOR_PRESERVE_STATUS_CHANGES: "true"
  MONITOR_CLEANUP_SAFETY_LIMIT: "1000000"

  # Job Runs Cleanup
  JOB_RUNS_CLEANUP_ENABLED: "false"
  JOB_RUNS_CLEANUP_CRON: "0 3 * * *"
  JOB_RUNS_RETENTION_DAYS: "90"
  JOB_RUNS_CLEANUP_BATCH_SIZE: "100"
  JOB_RUNS_CLEANUP_SAFETY_LIMIT: "10000"

  # Playground Artifacts Cleanup
  PLAYGROUND_CLEANUP_ENABLED: "true"
  PLAYGROUND_CLEANUP_CRON: "0 */12 * * *"
  PLAYGROUND_CLEANUP_MAX_AGE_HOURS: "24"

  # Better Auth Admin Configuration
  MAX_PROJECTS_PER_ORG: "10"
  DEFAULT_PROJECT_NAME: "Default Project"

  # SMTP Email Configuration
  SMTP_HOST: "smtp.resend.com"
  SMTP_PORT: "587"
  SMTP_USER: "resend"
  SMTP_SECURE: "false"
  SMTP_FROM_EMAIL: "notification@example.com"

  # AI Fix Feature Configuration
  AI_PROVIDER: "openai"
  AI_MODEL: "gpt-4o-mini"
  AI_TIMEOUT_MS: "90000"
  AI_MAX_RETRIES: "2"
  AI_TEMPERATURE: "0.1"

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: supercheck-secrets
  namespace: supercheck
type: Opaque
data:
  # Base64 encoded values
  DB_PASSWORD: <base64-encoded-password>
  REDIS_PASSWORD: <base64-encoded-password>
  AWS_ACCESS_KEY_ID: <base64-encoded-access-key>
  AWS_SECRET_ACCESS_KEY: <base64-encoded-secret-key>
  BETTER_AUTH_SECRET: <base64-encoded-auth-secret>
  CREDENTIAL_ENCRYPTION_KEY: <base64-encoded-credential-encryption-key>
  VARIABLES_ENCRYPTION_KEY: <base64-encoded-64-character-encryption-key>
  SMTP_PASSWORD: <base64-encoded-smtp-password>
  OPENAI_API_KEY: <base64-encoded-openai-api-key>

---
# Supercheck App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supercheck-app
  namespace: supercheck
  labels:
    app: supercheck-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supercheck-app
  template:
    metadata:
      labels:
        app: supercheck-app
    spec:
      containers:
        - name: app
          image: ghcr.io/supercheck-io/supercheck/app:latest
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: supercheck-config
            - secretRef:
                name: supercheck-secrets
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - name: tests-volume
              mountPath: /app/public/tests
            - name: test-results-volume
              mountPath: /app/public/test-results
            - name: artifacts-volume
              mountPath: /app/public/artifacts
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: tests-volume
          emptyDir: {}
        - name: test-results-volume
          emptyDir: {}
        - name: artifacts-volume
          emptyDir: {}

---
# Supercheck Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supercheck-worker
  namespace: supercheck
  labels:
    app: supercheck-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supercheck-worker
  template:
    metadata:
      labels:
        app: supercheck-worker
    spec:
      containers:
        - name: worker
          image: ghcr.io/supercheck-io/supercheck/worker:latest
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1024 --expose-gc --experimental-worker"
            - name: UV_THREADPOOL_SIZE
              value: "4"
          envFrom:
            - configMapRef:
                name: supercheck-config
            - secretRef:
                name: supercheck-secrets
          volumeMounts:
            - name: playwright-reports-volume
              mountPath: /app/playwright-reports
            - name: reports-volume
              mountPath: /app/report
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: playwright-reports-volume
          emptyDir: {}
        - name: reports-volume
          emptyDir: {}

---
# App Service
apiVersion: v1
kind: Service
metadata:
  name: supercheck-app-service
  namespace: supercheck
spec:
  type: ClusterIP
  selector:
    app: supercheck-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

---
# Ingress for Supercheck App
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: supercheck-ingress
  namespace: supercheck
  annotations:
    kubernetes.io/ingress.class: traefik
    # Add TLS annotations for production
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: traefik
  rules:
    - host: supercheck.IP_FROM_LB.nip.io # Replace with actual IP or domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: supercheck-app-service
                port:
                  number: 3000
  # Uncomment for TLS with custom domain
  # tls:
  #   - hosts:
  #       - supercheck.yourdomain.com
  #     secretName: supercheck-tls
