# Hetzner K3s Cluster Configuration for Supercheck
# This configuration sets up a Highly Available (HA) cluster with 3 master nodes and 3 worker nodes
# Updated with Hetzner-k3s best practices and recommendations

# Replace with your actual Hetzner Cloud API token
hetzner_token: YOUR_HETZNER_API_TOKEN

# Cluster name
cluster_name: supercheck-k3s

# Path where kubeconfig will be generated
kubeconfig_path: "./kubeconfig"

# K3s version
k3s_version: v1.32.0+k3s1

# Networking configuration with security improvements
networking:
  ssh:
    port: 22
    use_agent: false
    public_key_path: "~/.ssh/id_ed25519.pub" # Updated to ed25519 for better security
    private_key_path: "~/.ssh/id_ed25519"
  allowed_networks:
    ssh:
      - 0.0.0.0/0
    api:
      - 10.0.0.0/16 # Restrict to private network for better security
  public_network:
    ipv4: true
    ipv6: true
  private_network:
    enabled: true # Enable private network for better security
    subnet: 10.0.0.0/16
  cni:
    enabled: true
    encryption: false # Not needed with private network
    mode: flannel # Simple and reliable for medium clusters

# Cluster CIDR settings for better pod and service scaling
cluster_cidr: 10.244.0.0/16
service_cidr: 10.96.0.0/12
cluster_dns: 10.96.0.10

# Datastore configuration
datastore:
  mode: etcd # Use etcd for HA setup

# Master nodes configuration (HA setup)
masters_pool:
  instance_type: cpx21
  instance_count: 3
  locations:
    - fsn1 # Falkenstein
    - hel1 # Helsinki
    - nbg1 # Nuremberg

# Worker node pools with improved autoscaling
worker_node_pools:
  - name: app-workers
    instance_type: cpx31
    instance_count: 2
    location: hel1
    autoscaling:
      enabled: true
      min_instances: 2
      max_instances: 5
  - name: worker-scaling
    instance_type: cpx21
    location: fsn1
    autoscaling:
      enabled: true
      min_instances: 1
      max_instances: 3

# Embedded registry mirror for performance optimization
embedded_registry_mirror:
  enabled: true # Reduces external registry calls and improves pod startup times

# Protection settings
protect_against_deletion: true
create_load_balancer_for_the_kubernetes_api: true

# K3s upgrade concurrency
k3s_upgrade_concurrency: 1 # Conservative approach for stability

# Additional packages to install on all nodes
additional_packages:
  - ifupdown

# Additional commands to run after k3s installation
additional_post_k3s_commands:
  - apt update
  - apt upgrade -y
  - apt autoremove -y
