version: '3'
# docker build -t supercheck:latest .
services:
  app:
    image: supercheck:latest
    ports:
      - "3000:3000"
    environment:
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_ENDPOINT=http://minio:9000
      - S3_JOB_BUCKET_NAME=playwright-job-artifacts
      - S3_FORCE_PATH_STYLE=true
      - S3_OPERATION_TIMEOUT=10000
      - S3_MAX_RETRIES=3
      - MAX_CONCURRENT_TESTS=2
      - RUNNING_CAPACITY=5
      - QUEUED_CAPACITY=50
      - TEST_EXECUTION_TIMEOUT_MS=900000
      - TRACE_RECOVERY_INTERVAL_MS=300000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/supercheck
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=supercheck
    command: >
      sh -c "
        apt-get update && apt-get install -y postgresql-client &&
        echo 'Waiting for PostgreSQL...' &&
        until pg_isready -h postgres -U postgres; do
          echo 'PostgreSQL is unavailable - sleeping'
          sleep 2
        done &&
        echo 'PostgreSQL is up - running migrations' &&
        npx drizzle-kit generate &&
        npx drizzle-kit migrate &&
        echo 'Starting application' &&
        npm run start
      "
    volumes:
      - ./public/tests:/app/public/tests
      - ./public/test-results:/app/public/test-results
      - ./public/artifacts:/app/public/artifacts
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - ./src:/app/src
      - ./drizzle:/app/drizzle
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - supercheck-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=supercheck
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - supercheck-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - supercheck-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  minio-data:
  postgres-data:

networks:
  supercheck-network:
    driver: bridge 