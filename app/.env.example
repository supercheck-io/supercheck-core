# Environment variables for App
# Copy this file to .env and update the values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

DATABASE_URL=postgresql://postgres:postgres@localhost:5432/supercheck

# Connection Pool Settings (postgres-js)
# See: https://github.com/porsager/postgres#connection-pool
DB_POOL_MAX=10                 # Maximum number of connections (default: 10)
DB_IDLE_TIMEOUT=30             # Seconds before idle connections are closed (default: 30)
DB_CONNECT_TIMEOUT=10          # Seconds to wait for connection (default: 10)
DB_MAX_LIFETIME=1800           # Seconds before connections are recycled (default: 1800 = 30 min)

# =============================================================================
# AWS S3 / MINIO CONFIGURATION
# =============================================================================

AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin
S3_ENDPOINT=http://localhost:9000
S3_JOB_BUCKET_NAME=playwright-job-artifacts
S3_TEST_BUCKET_NAME=playwright-test-artifacts
S3_MONITOR_BUCKET_NAME=playwright-monitor-artifacts
S3_STATUS_BUCKET_NAME=supercheck-status-artifacts
S3_FORCE_PATH_STYLE=true
S3_OPERATION_TIMEOUT=10000
S3_MAX_RETRIES=3

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Build-time env var (embedded in Next.js bundle for browser auth client)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Runtime env vars for middleware (middleware can't access NEXT_PUBLIC_ vars at runtime)
APP_URL=http://localhost:3000
STATUS_PAGE_DOMAIN=supercheck.io

TEST_EXECUTION_TIMEOUT_MS=120000
JOB_EXECUTION_TIMEOUT_MS=900000
RUNNING_CAPACITY=5
QUEUED_CAPACITY=50

# Demo Mode
NEXT_PUBLIC_DEMO_MODE=false

# Notification Channel Limits
NEXT_PUBLIC_MAX_JOB_NOTIFICATION_CHANNELS=10
NEXT_PUBLIC_MAX_MONITOR_NOTIFICATION_CHANNELS=10

# Environment and Logging
# NODE_ENV controls logging verbosity:
# - development: Enables DEBUG logs and SQL query logging
# - production: Only ERROR, WARN, and LOG levels (no DEBUG/SQL queries)
NODE_ENV=development

# =============================================================================
# DATA LIFECYCLE MANAGEMENT (CLEANUP) CONFIGURATION
# =============================================================================

# Monitor Results Cleanup
MONITOR_CLEANUP_ENABLED=true
MONITOR_CLEANUP_CRON="0 2 * * *"                  # 2 AM daily
MONITOR_RETENTION_DAYS=30                          # Keep 30 days of data
MONITOR_CLEANUP_BATCH_SIZE=1000                    # Batch size for deletions
MONITOR_PRESERVE_STATUS_CHANGES=true               # Keep status change events
MONITOR_CLEANUP_SAFETY_LIMIT=1000000               # Max records per cleanup run

# Job Runs Cleanup
JOB_RUNS_CLEANUP_ENABLED=false                     # Disabled by default
JOB_RUNS_CLEANUP_CRON="0 3 * * *"                 # 3 AM daily
JOB_RUNS_RETENTION_DAYS=90                         # Keep 90 days of job runs
JOB_RUNS_CLEANUP_BATCH_SIZE=100                    # Smaller batches for complex operations
JOB_RUNS_CLEANUP_SAFETY_LIMIT=10000                # Max records per cleanup run

# Playground Artifacts Cleanup
PLAYGROUND_CLEANUP_ENABLED=true
PLAYGROUND_CLEANUP_CRON="0 */12 * * *"            # Every 12 hours
PLAYGROUND_CLEANUP_MAX_AGE_HOURS=24               # Delete after 24 hours

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=supersecure-redis-password-change-this
REDIS_URL=redis://:supersecure-redis-password-change-this@localhost:6379

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Better Auth Secret - REQUIRED for production (generate with: openssl rand -hex 32)
BETTER_AUTH_SECRET=your-super-secret-key-change-this-in-production
BETTER_AUTH_URL=http://localhost:3000

# Encryption Keys - REQUIRED for production
# Generate with: openssl rand -hex 32
VARIABLES_ENCRYPTION_KEY=your-64-character-encryption-key-for-variable-secrets-change-this-in-prod
CREDENTIAL_ENCRYPTION_KEY=your-credential-encryption-key-change-this-in-production

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================

MAX_PROJECTS_PER_ORG=10
DEFAULT_PROJECT_NAME="Default Project"

# =============================================================================
# EMAIL CONFIGURATION FOR NOTIFICATIONS
# =============================================================================

# SMTP Configuration - Can use any SMTP provider including Resend's SMTP
# Examples:
# - Gmail: smtp.gmail.com (use App Password with 2FA enabled)
# - Resend SMTP: smtp.resend.com (use API key as password)
# - SendGrid: smtp.sendgrid.net
# - Amazon SES: email-smtp.region.amazonaws.com

SMTP_HOST=smtp.resend.com
SMTP_PORT=587
SMTP_USER=resend
SMTP_PASSWORD=your-smtp-password-change-this-in-production
SMTP_SECURE=false
SMTP_FROM_EMAIL=notification@supercheck.io

# =============================================================================
# PLAYWRIGHT CONFIGURATION
# =============================================================================

# Playwright Artifact Configuration
# Control which artifacts are collected and retained during test execution.
# Available options (for trace & video, and for screenshot in newer versions):
#   'on'                 - Always collect (for every test run)
#   'off'                - Never collect
#   'only-on-failure'    - Collect only when the test fails (original or retry)
#   'retain-on-failure'  - Collect always, but delete if test passes
#   'on-first-retry'     - Collect only when retrying a failed test (for trace & video)
#   [trace-only] 'retain-on-first-failure' â€” valid for trace as of certain versions :contentReference[oaicite:0]{index=0}

PLAYWRIGHT_HEADLESS=true             # Run browsers in headless mode for non-interactive test runs
PLAYWRIGHT_RETRIES=1                 # Retry each failing test once before final failure

PLAYWRIGHT_TRACE=retain-on-failure      # Keep trace only if the test fails :contentReference[oaicite:1]{index=1}
PLAYWRIGHT_SCREENSHOT=only-on-failure   # Take screenshots only on failures :contentReference[oaicite:2]{index=2}
PLAYWRIGHT_VIDEO=retain-on-failure      # Record video and remove if the test passes :contentReference[oaicite:3]{index=3}

# For maximum debugging you could use 'only-on-failure' for all,
# but that may consume more storage in CI if many tests fail.

# Browser Support (disabled by default for performance)
ENABLE_FIREFOX=false
ENABLE_WEBKIT=false
ENABLE_MOBILE=false

# =============================================================================
# AI FIX FEATURE CONFIGURATION (OPTIONAL)
# =============================================================================

# AI fix feature is now always enabled

# AI Provider Configuration
# Only OpenAI is supported
AI_PROVIDER=openai

# AI Model Configuration
# Supported OpenAI models: gpt-4o, gpt-4o-mini (recommended), gpt-4-turbo, gpt-3.5-turbo
AI_MODEL=gpt-4o-mini

# API Keys (required if AI fix is enabled)
OPENAI_API_KEY=your-openai-api-key-here

# AI Service Configuration (Advanced)
AI_TIMEOUT_MS=90000          # Request timeout in milliseconds (10000-120000, higher for GPT-5 models)
AI_MAX_RETRIES=2             # Number of retry attempts (1-5)
AI_TEMPERATURE=0.1           # Response randomness (0.0-2.0, lower = more deterministic)